[tool.poetry]
name = "react-fastapi-sample"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = "^3.9.13"
isort = "^5.10.1"
pyproject-flake8 = "^0.0.1-alpha.3"
poethepoet = "^0.13.1"
uvicorn = "^0.17.6"
sentry-sdk = "^1.5.8"
fastapi = "^0.75.0"
SQLAlchemy = "^1.4.32"
pydantic = {extras = ["email", "dotenv"], version = "^1.9.0"}
python-dotenv = "^0.20.0"
mysqlclient = "^2.1.0"
ulid-py = "^1.1.0"
python-jose = "^3.3.0"
passlib = "^1.7.4"
toml = "^0.10.2"
PyYAML = "^6.0"
python-multipart = "^0.0.5"
python-json-logger = "^2.0.2"
mysql-connector-python = "^8.0.28"
bcrypt = "^3.2.0"
py = "^1.11.0"
humps = "^0.2.2"
inflection = "^0.5.1"
sqlalchemy-filters = {git = "https://github.com/bodik/sqlalchemy-filters", rev = "fix-sqla14-select"}
fire = "^0.4.0"
alembic = "^1.7.7"

[tool.poetry.dev-dependencies]
locust = "^2.8.5"
black = "^22.3.0"
isort = "^5.10.1"
pytest = "^7.1.2"
mypy = "^0.950"
types-PyYAML = "^6.0.7"
types-toml = "^0.10.6"
sqlalchemy-stubs = "^0.4"
pyproject-flake8 = "^0.0.1-alpha.4"
autoflake = "^1.4"
pre-commit = "^2.18.1"
codespell = "^2.1.0"
bandit = "^1.7.4"

# [tool.black]
# line-length = 119

# [tool.isort]
# profile = "black"
# line_length = 119
# multi_line_output = 3
# include_trailing_comma = true
# force_grid_wrap = 0

# [tool.flake8]
# max-line-length = 119
# exclude = "__init__.py,alembic,tests"
# ignore = "E203,W503,W504"

# [tool.mypy]
# python_version = "3.8"
mkdocs = "^1.3.0"
# plugins = "pydantic.mypy, sqlmypy"
# ignore_missing_imports = true
# disallow_untyped_defs = true
# exclude = "alembic/|tests/"

[tool.poe.tasks]
# serve-uvicorn = {"shell" = "uvicorn main:app --host 127.0.0.1 --port 8090 --reload --log-config logger_config.yaml", help="開発用サーバーの起動(DB,uvicorn)"}
# serve-build = {"shell" = "docker-compose up --build"}
# serve = {"shell" = "docker-compose up"}
test = {"cmd" = "pytest", help="pytestの実行"}
# format = {"shell" = "black ./app && pflake8 ./app && isort ./app && autoflake --in-place --recursive --expand-star-imports --remove-all-unused-imports --ignore-init-module-imports --remove-unused-variables app/*"}
# mypy = {"shell" = "mypy ./app"}
# check = {"shell" = "poe mypy && poe format", help="構文、フォーマットチェック"}
# spell = {"shell" = "codespell app/", help="スペルチェック"}
makemigrations = {"shell" = "alembic revision --autogenerate", help="DBマイグレーションファイルの自動作成"}
migrate = {"shell" = "alembic upgrade heads", help="DBマイグレーション"}
create-user = {"cmd" = "python commands/user_creation.py", help="ユーザー作成"}
init-table = {"cmd" = "echo init table", help="テーブルを作成し、seedデータをセットする"}
pre-commit = {"cmd" = "pre-commit", help="pre-commit処理の実行(commit自体は行わない)"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
